<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:Media="clr-namespace:System.Windows.Media;assembly=PresentationCore"
                xmlns:System="clr-namespace:System;assembly=mscorlib">

    <Style x:Key="{x:Type Menu}"
       TargetType="{x:Type Menu}">
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border BorderThickness="0" Background="{TemplateBinding Background}">
                        <StackPanel ClipToBounds="True"
                                    Orientation="Horizontal"
                                    IsItemsHost="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="Background" Value="#3f3f3f"/>
        <Setter Property="BorderBrush" Value="#3f3f3f"/>
        <Setter Property="Foreground" Value="#f3f3f3"/>
    </Style>

    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border VerticalAlignment="Stretch"
                            Height="100" Width="450"
                            CornerRadius="15" Margin="0, 0, 10, 20"
                            Background="#801f1f1f">

                        <TextBlock Text="{TemplateBinding Property=Content}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Right"
                                   Margin="59, 10, 10, 10"
                                   FontSize="25"
                                   Foreground="White"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="Windowcharacters"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border VerticalAlignment="Stretch"
                            Height="100" Width="450"
                            CornerRadius="15" Margin="0, 0, 10, 20"
                                    Background="#094771">

                                <TextBlock Text="{TemplateBinding Property=Content}"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Right"
                                           Margin="10, 10, 10, 10"
                                           FontSize="25"
                                           Foreground="White">
                                </TextBlock>

                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#094771"/>
            </Trigger>

        </Style.Triggers>

    </Style>

    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="Grid.IsSharedSizeScope"
          Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel>
                        <Border Margin="5, 5, 5, 0" Background="#333333" Height="10"/>
                        <Border Margin="5, 0, 5, 0" x:Name="Border"
                                Background="#333333"
                                BorderThickness="{TemplateBinding Property=BorderThickness}" 
                                BorderBrush="{TemplateBinding Property=BorderBrush}">

                            <StackPanel IsItemsHost="True"
                                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                        <Border Margin="5, 0, 5, 5" Background="#333333" Height="10"/>

                        <StackPanel.Effect>
                            <DropShadowEffect
                                ShadowDepth="2"
                                Color="Black"
                                Opacity="0.5"
                                BlurRadius="7"/>
                        </StackPanel.Effect>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--#region Menu Items-->
    
    <!-- TopLevelHeader -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Name="Border" >
            <Grid Height="25">
                <TextBlock Margin="10, 2"
                           Text="{TemplateBinding Header}"
                           HorizontalAlignment="Center" FontSize="14"/>

                <Popup Name="Popup"
                       Placement="Bottom"
                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                       AllowsTransparency="True"
                       Focusable="False"
                       PopupAnimation="Fade">

                    <Border Name="SubmenuBorder"
                            SnapsToDevicePixels="True"
                            Background="#333333"
                            BorderThickness="0" >
                        <StackPanel IsItemsHost="True" 
                                    KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#80094771"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4"/>
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#7f7f7f"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- TopLevelItem -->

    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}"
                     TargetType="{x:Type MenuItem}">

        <Border Name="Border_Bck" Background="{TemplateBinding Background}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="40"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="12"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0"/>
                <TextBlock Name="HeaderHost"
                           Grid.Column="1"
                           Text="{TemplateBinding Header}"
                           VerticalAlignment="Center"
                           FontFamily="Gadugi"
                           FontSize="15"
                           Foreground="#f7f7f7"/>

                <TextBlock Grid.Column="2"/>
                <TextBlock x:Name="InputGestureText"
                           Grid.Column="3"
                           Text="{TemplateBinding InputGestureText}"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Center"
                           Foreground="#f7f7f7"/>

                <StackPanel IsItemsHost="True" 
                            KeyboardNavigation.DirectionalNavigation="Cycle" />
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border_Bck" Property="Background" Value="#80094771"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Submenu Item Control Template-->
    
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
                     TargetType="{x:Type MenuItem}">

        <Border Name="Border_Bck" Background="{TemplateBinding Background}">
            <Grid Height="25">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="40"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="12"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0"/>
                <TextBlock Name="HeaderHost"
                           Grid.Column="1"
                           Text="{TemplateBinding Header}"
                           VerticalAlignment="Center"
                           FontFamily="Gadugi"
                           FontSize="15"
                           Foreground="#f7f7f7"/>

                <TextBlock Grid.Column="2"/>
                <TextBlock x:Name="InputGestureText"
                           Grid.Column="3"
                           Text="{TemplateBinding InputGestureText}"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Center"
                           FontFamily="Gadugi"
                           FontSize="15"
                           Foreground="#f7f7f7"/>

                <StackPanel IsItemsHost="True" 
                            KeyboardNavigation.DirectionalNavigation="Cycle" />
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border_Bck" Property="Background" Value="#80094771"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <!--Submenu Header Control Template-->
    
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" 
                     TargetType="{x:Type MenuItem}">
        <Border Name="Border">
            <Grid Height="25">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="40"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0"/>
                <TextBlock Name="HeaderHost"
                           Grid.Column="1"
                           Text="{TemplateBinding Header}"
                           VerticalAlignment="Center"
                           FontFamily="Gadugi"
                           FontSize="15"
                           Foreground="#f7f7f7"/>

                <TextBlock Grid.Column="2"/>
                <TextBlock x:Name="InputGestureText"
                           Grid.Column="3"
                           Text="{TemplateBinding InputGestureText}"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Center"
                           FontFamily="Gadugi"
                           FontSize="15"
                           Foreground="#f7f7f7"/>
                
                <Path Grid.Column="4"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="M 0 0 L 0 7 L 4 3.5 Z" 
                      Fill="#7f7f7f" /> <!--Arrow?-->
                
                <Popup Name="Popup"
                       Placement="Right"
                       HorizontalOffset="1"
                       VerticalOffset="-5"
                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                       AllowsTransparency="True" 
                       Focusable="False"
                       PopupAnimation="Fade">
                    <Border Name="SubmenuBorder"
                            SnapsToDevicePixels="True"
                            Background="#333333"
                            BorderThickness="0">
                        <StackPanel IsItemsHost="True" 
                                    KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>

                    <Popup.Effect>
                        <DropShadowEffect
                                ShadowDepth="2"
                                Color="Black"
                                Opacity="0.5"
                                BlurRadius="7"/>
                    </Popup.Effect>
                </Popup> <!--Slidout menu-->
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Background" Value="#80094771"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0"/>
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,5,0,5"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="Border" Property="Background" Value="#094771"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
                <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style BasedOn="{StaticResource {x:Type Separator}}"
        TargetType="{x:Type Separator}"
        x:Key="SeperatorStyle">

        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Separator">
                        <StackPanel>
                            <Border Background="#333333" Height="3"/>
                            <Border Background="{TemplateBinding Background}" Height="1" Margin="5, 0, 5, 0"/>
                            <Border Background="#333333" Height="3"/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style BasedOn="{StaticResource {x:Type Separator}}"
        TargetType="{x:Type Separator}"
        x:Key="BoldSeperatorStyle">

        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Separator">
                        <StackPanel>
                            <Border Background="#333333" Height="3"/>
                            <Border Background="{TemplateBinding Background}" Height="2" Margin="5, 0, 5, 0"/>
                            <Border Background="#333333" Height="3"/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <!--#endregion-->

    <Style BasedOn="{StaticResource {x:Type CheckBox}}"
        TargetType="{x:Type CheckBox}">

        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid VerticalAlignment="Stretch"
                              HorizontalAlignment="Stretch"
                              Background="{TemplateBinding Background}">

                            <TextBlock Text="{TemplateBinding Property=Content}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Margin="0, 0, 0, 0"
                                       Foreground="#f7f7f7"/>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontFamily" Value="Windowcharacters"/>
        </Style.Setters>

        <Style.Triggers>
            
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="#094771"/>
            </Trigger>
            
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#80094771"/>
            </Trigger>

        </Style.Triggers>

    </Style>

</ResourceDictionary>